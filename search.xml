<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>注册树模式</title>
      <link href="/2018/04/02/%E6%B3%A8%E5%86%8C%E6%A0%91%E6%A8%A1%E5%BC%8F/"/>
      <url>/2018/04/02/%E6%B3%A8%E5%86%8C%E6%A0%91%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>工厂模式为了减少不断的new操作，单例模式为了维持全局唯一的实例，注册树模式跟这两种模式类似的地方在于减少并维持某个实例、变量的唯一性，而不同的地方在于注册树模式将这些实例、变量等放到全局（或相对全局）来进行统一管理调度，而不像工厂与单例模式那么闲散。</p><p>注册树模式，顾名思义，该模式实现将某个东西注册（挂）到某棵树的方法。随即引出实现该模式的几个要点：<br>1.有棵树；<br>2.注册（挂）到树的方法；<br>3.读取的方法（实现<code>用</code>的功能，不能干挂着不做事）；<br>4.注销的方法（有注册就要有注销的功能）</p><p>实现如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一棵大树</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> $tree = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 挂到树上</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($key, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">self</span>::$tree[$key] = $value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取树上的节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">self</span>::$tree[$key]) ? <span class="keyword">self</span>::$tree[$key] : <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取下树的节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">_unset</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">self</span>::$tree[$key]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 将某个东西挂到树上</span><br><span class="line">Register::set(&apos;db&apos;, &apos;db_value&apos;)</span><br><span class="line"></span><br><span class="line">// 读取</span><br><span class="line">Register::get(&apos;db&apos;);</span><br><span class="line"></span><br><span class="line">// 注销</span><br><span class="line">Register::_unset(&apos;db&apos;);</span><br></pre></td></tr></table></figure></p><p>通常，在项目初始化或载入某些模块的时候进行树的注册。</p>]]></content>
      
      
        <tags>
            
            <tag> 注册树模式 </tag>
            
            <tag> 全局注册 </tag>
            
            <tag> 唯一 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>创建自己的Laravel扩展包</title>
      <link href="/2018/03/28/service-provider/"/>
      <url>/2018/03/28/service-provider/</url>
      <content type="html"><![CDATA[<h1 id="创建自己的Laravel扩展包"><a href="#创建自己的Laravel扩展包" class="headerlink" title="创建自己的Laravel扩展包"></a>创建自己的Laravel扩展包</h1>]]></content>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> ServiceProvider </tag>
            
            <tag> composer </tag>
            
            <tag> 扩展包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/26/hello-world/"/>
      <url>/2018/03/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>解决supervisord进程导致的队列时差问题</title>
      <link href="/2017/10/31/supervisord/"/>
      <url>/2017/10/31/supervisord/</url>
      <content type="html"><![CDATA[<p>最近在处理laravel队列的时候突然发现，每次在线上服务器用dispatch添加的队列所生成的数据的时间总是比北京时间少了8小时，最后花费了很多时间才得以解决。以下是我排查的过程：</p><ol><li>检查config/app.php的时区配置；</li><li>给create方法添加<code>created_at</code>和<code>updated_at</code>字段；</li><li>检查服务器的系统时区以及服务器的mysql时区配置；</li><li>检查生成队列的过程中是否存在修改影响时区的代码</li><li>排查supervisord守护进程。</li></ol><p>经过一系列的排查，以及对比本地与服务器的运行结果，发现不是代码上的问题，也不是服务器上的时区问题，而是之前一个老旧的supervisord进程缓存的配置问题。<br>通过<code>ps -ef | grep supervisor</code>找到关于supervisord的一些进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root      9616  9559  0 15:02 pts/3    00:00:00 grep --color=auto supervisor</span><br><span class="line">root     22905     1  0 11:13 ?        00:00:03 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><p>使用命令<code>kill -s SIGTERM 22905</code>终止pid为22905的进程，然后输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><p>重新将supervisord指定配置文件，更新新的配置到supervisord</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl update</span><br></pre></td></tr></table></figure><p>重新启动配置中的所有程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl reload</span><br></pre></td></tr></table></figure><p>最后重启所有进程<code>supervisorctl restart all</code>即可</p>]]></content>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> 任务队列 </tag>
            
            <tag> 8小时 </tag>
            
            <tag> supervisor </tag>
            
            <tag> created_at </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
